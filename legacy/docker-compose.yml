version: '3.9'
services:
  redis:
    image: 'redis:latest'
    profiles:
      - dev
      - production
      - full
    hostname: redis
    ports:
      - "6379:6379"
  db:
    image: 'docker.io/library/mariadb:10.3'
    profiles:
      - dev
      - production
      - full
    hostname: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test"
      MYSQL_ROOT_PASSWORD: "mypassword"
    healthcheck:
      test: "/usr/bin/mysql --user=test --password=test --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
    volumes:
      - "./db/tiktok-init.sql:/docker-entrypoint-initdb.d/1.sql"
#  tor:
#    image: 'm4schini/tor'
#    hostname: tor
#    ports:
#      - '9050:9050'
#      - '9051:9051'
  miner:
#    image: 'm4schini/metronom-miner:latest'
    build:
      context: ./miner
    depends_on:
      - redis
    profiles:
       - production
       - full
    hostname: miner
    command:
      - /app/miner
      - --redis=redis:6379
  metron:
    build:
      context: ./metron
    depends_on:
      - db
      - redis
      - miner
    profiles:
      - production
      - full
    hostname: metron
    command:
      - --target=krawallklara
      - --redis=redis:6379
      - --database=root:mypassword@tcp(db:3306)/tiktok
#    healthcheck:
#      test: 'curl -f http://127.0.0.1:8081 || exit 1'
#      timeout: '10s'
#      retries: 3
#      interval: '2s'
#    ports:
#      - '8080:8081'
#      - '50051:50051'
#  analytics:
#    image: 'm4schini/metronom:latest'
#    profiles:
#      - production
#      - full
#    depends_on:
#      miner:
#        condition: service_healthy
#    hostname: metronom
#    environment:
#      - HOST=miner:50051
#      - INTERVAL=5s
#      - ACCOUNT=${WATCH}
#      - DB_HOST=db
#      - DB_PORT=3306
#      - DB_USER=root
#      - DB_PASS=mypassword
  web:
    image: 'm4schini/metronom-web:latest'
    depends_on:
      - web-backend
    profiles:
      - full
    environment:
      - API_HOST=backend
  web-backend:
    image: 'm4schini/metronom-web-backend:latest'
    hostname: 'backend'
    profiles:
      - full
    depends_on:
      db:
        condition: service_healthy